%PDF-1.2
5 0 obj
<</Length 6 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
1 i
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 284.412 736.5 Tm
(bigint.h)Tj
-117.625 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: bigint.h,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#ifndef __BIGINT_H__)]TJ
T*[(4:)-600(#define __BIGINT_H__)]TJ
(5:)'
T*[(6:)-600(#include <exception>)]TJ
T*[(7:)-600(#include <iostream>)]TJ
T*[(8:)-600(#include <utility>)]TJ
(9:)'
-6 -11 Td
[(10:)-600(using namespace std;)]TJ
(11:)'
T*[(12:)-600(#include "trace.h")]TJ
(13:)'
T*[(14:)-600(class bigint;)]TJ
T*[(15:)-600(typedef pair <bigint, bigint> bigpair;)]TJ
(16:)'
T*[(17:)-600(class bigint {)]TJ
T*[(18:)-600(      friend ostream &operator<< \(ostream &, const bigint &\);)]TJ
T*[(19:)-600(   private:)]TJ
T*[(20:)-600(      int small_value;)]TJ
T*[(21:)-600(      bigpair div_rem \(const bigint &that\) const;)]TJ
T*[(22:)-600(      int compare \(const bigint &that\) const;)]TJ
T*[(23:)-600(      int abscompare \(const bigint &that\) const;)]TJ
T*[(24:)-600(      bigint mul_by_2 \(\);)]TJ
T*[(25:)-600(   public:)]TJ
T*[(26:)-600(      //)]TJ
T*[(27:)-600(      // Override implicit members.)]TJ
T*[(28:)-600(      //)]TJ
T*[(29:)-600(      bigint \(\);)]TJ
T*[(30:)-600(      bigint \(const bigint &that\);)]TJ
T*[(31:)-600(      bigint &operator= \(const bigint &that\);)]TJ
T*[(32:)-600(      ~bigint \(\);)]TJ
T*[(33:)-600(      //)]TJ
T*[(34:)-600(      // Extra ctors to make bigints.)]TJ
T*[(35:)-600(      //)]TJ
T*[(36:)-600(      bigint \(const int that\);)]TJ
T*[(37:)-600(      bigint \(const string &that\);)]TJ
T*[(38:)-600(      //)]TJ
T*[(39:)-600(      // Basic add/sub operators.)]TJ
T*[(40:)-600(      //)]TJ
T*[(41:)-600(      bigint operator+ \(const bigint &that\) const;)]TJ
T*[(42:)-600(      bigint operator- \(const bigint &that\) const;)]TJ
T*[(43:)-600(      bigint operator- \(\) const;)]TJ
T*[(44:)-600(      int smallint \(\) const;)]TJ
T*[(45:)-600(      //)]TJ
T*[(46:)-600(      // Extended operators implemented with add/sub.)]TJ
T*[(47:)-600(      //)]TJ
T*[(48:)-600(      bigint operator* \(const bigint &that\) const;)]TJ
T*[(49:)-600(      bigint operator/ \(const bigint &that\) const;)]TJ
T*[(50:)-600(      bigint operator% \(const bigint &that\) const;)]TJ
T*[(51:)-600(      bigint pow \(const bigint &that\) const;)]TJ
T*[(52:)-600(      //)]TJ
T*[(53:)-600(      // Comparison operators.)]TJ
T*[(54:)-600(      //)]TJ
T*[(55:)-600(      bool operator== \(const bigint &that\) const;)]TJ
T*[(56:)-600(      bool operator!= \(const bigint &that\) const;)]TJ
T*[(57:)-600(      bool operator<  \(const bigint &that\) const;)]TJ
T*[(58:)-600(      bool operator<= \(const bigint &that\) const;)]TJ
T*[(59:)-600(      bool operator>  \(const bigint &that\) const;)]TJ
T*[(60:)-600(      bool operator>= \(const bigint &that\) const;)]TJ
T*[(61:)-600(};)]TJ
(62:)'
T*[(63:)-600(//)]TJ
T*[(64:)-600(// Operators with a left side of int.)]TJ
ET
Q
Q
endstream
endobj
6 0 obj
3304
endobj
14 0 obj
<</Length 15 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 284.412 736.5 Tm
(bigint.h)Tj
-117.625 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-104.787 -35.5 Td
[(65:)-600(//)]TJ
11 TL
T*[(66:)-600(bigint operator+ \(int left, const bigint &that\);)]TJ
T*[(67:)-600(bigint operator- \(int left, const bigint &that\);)]TJ
T*[(68:)-600(bigint operator* \(int left, const bigint &that\);)]TJ
T*[(69:)-600(bigint operator/ \(int left, const bigint &that\);)]TJ
T*[(70:)-600(bigint operator% \(int left, const bigint &that\);)]TJ
T*[(71:)-600(bool operator== \(int left, const bigint &that\);)]TJ
T*[(72:)-600(bool operator!= \(int left, const bigint &that\);)]TJ
T*[(73:)-600(bool operator<  \(int left, const bigint &that\);)]TJ
T*[(74:)-600(bool operator<= \(int left, const bigint &that\);)]TJ
T*[(75:)-600(bool operator>  \(int left, const bigint &that\);)]TJ
T*[(76:)-600(bool operator>= \(int left, const bigint &that\);)]TJ
(77:)'
T*[(78:)-600(#endif)]TJ
(79:)'
ET
Q
Q
endstream
endobj
15 0 obj
1321
endobj
18 0 obj
<</Length 19 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 276.958 736.5 Tm
(iterstack.h)Tj
-110.171 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: iterstack.h,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(//)]TJ
T*[(4:)-600(// The class std::stack does not provide an iterator, which is needed)]TJ
T*[(5:)-600(// for this class.  So, like std::stack, class iterstack is implemented)]TJ
T*[(6:)-600(// on top of a std::deque.  We don't use a deque directly because we)]TJ
T*[(7:)-600(// want to restrict operations.)]TJ
T*[(8:)-600(//)]TJ
T*[(9:)-600(// All functions are merely forwarded to the deque as inline functions)]TJ
-6 -11 Td
[(10:)-600(// for efficiency.  For detailed documentation of the functions see)]TJ
T*[(11:)-600(// std::deque.)]TJ
T*[(12:)-600(//)]TJ
T*[(13:)-600(// No implementation file is needed because all functions are inline.)]TJ
T*[(14:)-600(// Inline functions are only a good idea for trivial forwarding)]TJ
T*[(15:)-600(// functions.)]TJ
T*[(16:)-600(//)]TJ
(17:)'
T*[(18:)-600(#ifndef __ITERSTACK_H__)]TJ
T*[(19:)-600(#define __ITERSTACK_H__)]TJ
(20:)'
T*[(21:)-600(#include <deque>)]TJ
(22:)'
T*[(23:)-600(using namespace std;)]TJ
(24:)'
T*[(25:)-600(template <typename item_t>)]TJ
T*[(26:)-600(class iterstack {)]TJ
T*[(27:)-600(   private:)]TJ
T*[(28:)-600(      deque<item_t> data;)]TJ
T*[(29:)-600(   public:)]TJ
T*[(30:)-600(      typedef typename deque<item_t>::const_reference const_reference;)]TJ
T*[(31:)-600(      typedef typename deque<item_t>::const_iterator const_iterator;)]TJ
T*[(32:)-600(      void push_front \(const item_t &item\) { data.push_front \(item\); })]TJ
T*[(33:)-600(      void pop_front \(\)                    { data.pop_front \(\); })]TJ
T*[(34:)-600(      void clear \(\)                        { data.clear \(\); })]TJ
T*[(35:)-600(      const_reference front \(\) const       { return data.front \(\); })]TJ
T*[(36:)-600(      size_t size \(\) const                 { return data.size \(\); })]TJ
T*[(37:)-600(      bool empty \(\) const                  { return data.empty \(\); })]TJ
T*[(38:)-600(      const_iterator begin \(\) const        { return data.begin \(\); })]TJ
T*[(39:)-600(      const_iterator end \(\) const          { return data.end \(\); })]TJ
T*[(40:)-600(};)]TJ
(41:)'
T*[(42:)-600(#endif)]TJ
(43:)'
ET
Q
Q
endstream
endobj
19 0 obj
2699
endobj
22 0 obj
<</Length 23 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 279.296 736.5 Tm
(scanner.h)Tj
-112.508 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: scanner.h,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#ifndef __SCANNER_H__)]TJ
T*[(4:)-600(#define __SCANNER_H__)]TJ
(5:)'
T*[(6:)-600(#include <iostream>)]TJ
T*[(7:)-600(#include <utility>)]TJ
(8:)'
T*[(9:)-600(using namespace std;)]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(#include "trace.h")]TJ
(12:)'
T*[(13:)-600(enum terminal_symbol {NUMBER, OPERATOR, SCANEOF};)]TJ
T*[(14:)-600(struct token_t {)]TJ
T*[(15:)-600(   terminal_symbol symbol;)]TJ
T*[(16:)-600(   string lexinfo;)]TJ
T*[(17:)-600(};)]TJ
(18:)'
T*[(19:)-600(class scanner {)]TJ
T*[(20:)-600(   private:)]TJ
T*[(21:)-600(      bool seen_eof;)]TJ
T*[(22:)-600(      char lookahead;)]TJ
T*[(23:)-600(      void advance\(\);)]TJ
T*[(24:)-600(   public:)]TJ
T*[(25:)-600(      scanner\(\);)]TJ
T*[(26:)-600(      token_t scan \(\);)]TJ
T*[(27:)-600(};)]TJ
(28:)'
T*[(29:)-600(ostream &operator<< \(ostream &, const terminal_symbol &\);)]TJ
T*[(30:)-600(ostream &operator<< \(ostream &, const token_t &\);)]TJ
(31:)'
T*[(32:)-600(#endif)]TJ
(33:)'
ET
Q
Q
endstream
endobj
23 0 obj
1559
endobj
26 0 obj
<</Length 27 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 287.073 736.5 Tm
(trace.h)Tj
-120.285 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: trace.h,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#ifndef __TRACE_H__)]TJ
T*[(4:)-600(#define __TRACE_H__)]TJ
(5:)'
T*[(6:)-600(#include <iostream>)]TJ
T*[(7:)-600(#include <string>)]TJ
T*[(8:)-600(#include <vector>)]TJ
(9:)'
-6 -11 Td
[(10:)-600(using namespace std;)]TJ
(11:)'
T*[(12:)-600(//)]TJ
T*[(13:)-600(// traceflags -)]TJ
T*[(14:)-600(//    static class for maintaining global trace flags, each indicated)]TJ
T*[(15:)-600(//    by a single character.)]TJ
T*[(16:)-600(// setflags -)]TJ
T*[(17:)-600(//    Takes a string argument, and sets a flag for each char in the)]TJ
T*[(18:)-600(//    string.  As a special case, '@', sets all flags.)]TJ
T*[(19:)-600(// getflag -)]TJ
T*[(20:)-600(//    Used by the TRACE macro to check to see if a flag has been set.)]TJ
T*[(21:)-600(//    Not to be called by user code.)]TJ
T*[(22:)-600(//)]TJ
(23:)'
T*[(24:)-600(class traceflags {)]TJ
T*[(25:)-600(   private:)]TJ
T*[(26:)-600(      static vector<char> flags;)]TJ
T*[(27:)-600(   public:)]TJ
T*[(28:)-600(      static void setflags \(const string &optflags\);)]TJ
T*[(29:)-600(      static bool getflag \(char flag\);)]TJ
T*[(30:)-600(};)]TJ
(31:)'
T*[(32:)-600(//)]TJ
T*[(33:)-600(// TRACE -)]TJ
T*[(34:)-600(//    Macro which expands into trace code.  First argument is a)]TJ
T*[(35:)-600(//    trace flag char, second argument is output code that can)]TJ
T*[(36:)-600(//    be sandwiched between <<.  Beware of operator precedence.)]TJ
T*[(37:)-600(//    Example:)]TJ
T*[(38:)-600(//       TRACE \('u', "foo = " << foo\);)]TJ
T*[(39:)-600(//    will print two words and a newline if flag 'u' is  on.)]TJ
T*[(40:)-600(//    Traces are preceded by filename, line number, and function.)]TJ
T*[(41:)-600(//)]TJ
(42:)'
T*[(43:)-600(#define TRACE\(FLAG,CODE\) { \\)]TJ
T*[(44:)-600(           if \(traceflags::getflag \(FLAG\)\) { \\)]TJ
T*[(45:)-600(              cerr << __FILE__ << ":" << __LINE__ << ":" \\)]TJ
T*[(46:)-600(                   << __func__ << ":" << endl; \\)]TJ
T*[(47:)-600(              cerr << CODE << endl; \\)]TJ
T*[(48:)-600(           } \\)]TJ
T*[(49:)-600(        })]TJ
(50:)'
T*[(51:)-600(#endif)]TJ
(52:)'
ET
Q
Q
endstream
endobj
27 0 obj
2690
endobj
30 0 obj
<</Length 31 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 291.412 736.5 Tm
(util.h)Tj
-124.625 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: util.h,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(//)]TJ
T*[(4:)-600(// util -)]TJ
T*[(5:)-600(//    A utility class to provide various services not conveniently)]TJ
T*[(6:)-600(//    included in other modules.)]TJ
T*[(7:)-600(//)]TJ
(8:)'
T*[(9:)-600(#ifndef __UTIL_H__)]TJ
-6 -11 Td
[(10:)-600(#define __UTIL_H__)]TJ
(11:)'
T*[(12:)-600(#include <iostream>)]TJ
T*[(13:)-600(#include <vector>)]TJ
(14:)'
T*[(15:)-600(#ifdef __GNUC__)]TJ
T*[(16:)-600(#include <stdexcept>)]TJ
T*[(17:)-600(#endif)]TJ
(18:)'
T*[(19:)-600(using namespace std;)]TJ
(20:)'
T*[(21:)-600(#include "trace.h")]TJ
(22:)'
T*[(23:)-600(//)]TJ
T*[(24:)-600(// ydc_exn -)]TJ
T*[(25:)-600(//    Indicate a problem where processing should be abandoned and)]TJ
T*[(26:)-600(//    the main function should take control.)]TJ
T*[(27:)-600(//)]TJ
(28:)'
T*[(29:)-600(class ydc_exn: public runtime_error {)]TJ
T*[(30:)-600(   public:)]TJ
T*[(31:)-600(      explicit ydc_exn \(const string &what\);)]TJ
T*[(32:)-600(};)]TJ
(33:)'
T*[(34:)-600(//)]TJ
T*[(35:)-600(// octal -)]TJ
T*[(36:)-600(//    Convert integer to octal string.)]TJ
T*[(37:)-600(//)]TJ
(38:)'
T*[(39:)-600(const string octal \(int decimal\);)]TJ
(40:)'
T*[(41:)-600(//)]TJ
T*[(42:)-600(// sys_info -)]TJ
T*[(43:)-600(//    Keep track of execname and exit status.  Must be initialized)]TJ
T*[(44:)-600(//    as the first thing done inside main.  Main should call:)]TJ
T*[(45:)-600(//       sys_info::set_execname \(argv[0]\);)]TJ
T*[(46:)-600(//    before anything else.)]TJ
T*[(47:)-600(//)]TJ
(48:)'
T*[(49:)-600(class sys_info {)]TJ
T*[(50:)-600(   private:)]TJ
T*[(51:)-600(      static string execname;)]TJ
T*[(52:)-600(      static int exit_status;)]TJ
T*[(53:)-600(   public:)]TJ
T*[(54:)-600(      static void set_execname \(const string &argv0\);)]TJ
T*[(55:)-600(      static const string &get_execname \(\) {return execname; })]TJ
T*[(56:)-600(      static void set_status \(int status\) {exit_status = status; })]TJ
T*[(57:)-600(      static int get_status \(\) {return exit_status; })]TJ
T*[(58:)-600(};)]TJ
(59:)'
T*[(60:)-600(//)]TJ
T*[(61:)-600(// complain -)]TJ
T*[(62:)-600(//    Used for starting error messages.  Sets the exit status to)]TJ
T*[(63:)-600(//    EXIT_FAILURE, writes the program name to cerr, and then)]TJ
T*[(64:)-600(//    returns the cerr ostream.  Example:)]TJ
ET
Q
Q
endstream
endobj
31 0 obj
2880
endobj
34 0 obj
<</Length 35 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 291.412 736.5 Tm
(util.h)Tj
-124.625 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-104.787 -35.5 Td
[(65:)-600(//       complain\(\) << filename << ": some problem" << endl;)]TJ
11 TL
T*[(66:)-600(//)]TJ
(67:)'
T*[(68:)-600(ostream &complain\(\);)]TJ
(69:)'
T*[(70:)-600(//)]TJ
T*[(71:)-600(// operator<< \(vector\) -)]TJ
T*[(72:)-600(//    An overloaded template operator which allows vectors to be)]TJ
T*[(73:)-600(//    printed out as a single operator, each element separated from)]TJ
T*[(74:)-600(//    the next with spaces.  The item_t must have an output operator)]TJ
T*[(75:)-600(//    defined for it.)]TJ
T*[(76:)-600(//)]TJ
(77:)'
T*[(78:)-600(template <typename item_t>)]TJ
T*[(79:)-600(ostream &operator<< \(ostream &out, const vector<item_t> &vec\);)]TJ
(80:)'
T*[(81:)-600(#endif)]TJ
(82:)'
ET
Q
Q
endstream
endobj
35 0 obj
1220
endobj
38 0 obj
<</Length 39 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 284.034 736.5 Tm
(main.cc)Tj
-117.247 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: main.cc,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <deque>)]TJ
T*[(4:)-600(#include <exception>)]TJ
T*[(5:)-600(#include <map>)]TJ
T*[(6:)-600(#include <iostream>)]TJ
T*[(7:)-600(#include <utility>)]TJ
(8:)'
T*[(9:)-600(using namespace std;)]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(#include "bigint.h")]TJ
T*[(12:)-600(#include "iterstack.h")]TJ
T*[(13:)-600(#include "util.h")]TJ
T*[(14:)-600(#include "scanner.h")]TJ
T*[(15:)-600(#include "trace.h")]TJ
(16:)'
T*[(17:)-600(typedef iterstack<bigint> bigint_stack;)]TJ
(18:)'
T*[(19:)-600(#define DO_BINOP\(FN_NAME,TFLAG,OPER\) \\)]TJ
T*[(20:)-600(   void FN_NAME \(bigint_stack &stack\) { \\)]TJ
T*[(21:)-600(      bigint right = stack.front\(\); \\)]TJ
T*[(22:)-600(      stack.pop_front\(\); \\)]TJ
T*[(23:)-600(      TRACE \(TFLAG, "right = " << right\); \\)]TJ
T*[(24:)-600(      bigint left = stack.front\(\); \\)]TJ
T*[(25:)-600(      stack.pop_front\(\); \\)]TJ
T*[(26:)-600(      TRACE \(TFLAG, "left = " << left\); \\)]TJ
T*[(27:)-600(      bigint result = left OPER \(right\); \\)]TJ
T*[(28:)-600(      TRACE \(TFLAG, "result = " << result\); \\)]TJ
T*[(29:)-600(      stack.push_front \(result\); \\)]TJ
T*[(30:)-600(   })]TJ
T*[(31:)-600(DO_BINOP\(do_add, '+', +   \))]TJ
T*[(32:)-600(DO_BINOP\(do_sub, '-', -   \))]TJ
T*[(33:)-600(DO_BINOP\(do_mul, '*', *   \))]TJ
T*[(34:)-600(DO_BINOP\(do_div, '/', /   \))]TJ
T*[(35:)-600(DO_BINOP\(do_rem, '%', %   \))]TJ
T*[(36:)-600(DO_BINOP\(do_pow, '^', .pow\))]TJ
(37:)'
T*[(38:)-600(void do_clear \(bigint_stack &stack\) {)]TJ
T*[(39:)-600(   TRACE \('c', ""\);)]TJ
T*[(40:)-600(   stack.clear\(\);)]TJ
T*[(41:)-600(})]TJ
(42:)'
T*[(43:)-600(void do_dup \(bigint_stack &stack\) {)]TJ
T*[(44:)-600(   bigint top = stack.front\(\);)]TJ
T*[(45:)-600(   TRACE \('d', top\);)]TJ
T*[(46:)-600(   stack.push_front \(top\);)]TJ
T*[(47:)-600(})]TJ
(48:)'
T*[(49:)-600(void do_printall \(bigint_stack &stack\) {)]TJ
T*[(50:)-600(   bigint_stack::const_iterator itor = stack.begin\(\);)]TJ
T*[(51:)-600(   bigint_stack::const_iterator end = stack.end\(\);)]TJ
T*[(52:)-600(   for \(; itor != end; ++itor\) cout << *itor << endl;)]TJ
T*[(53:)-600(})]TJ
(54:)'
T*[(55:)-600(void do_print \(bigint_stack &stack\) {)]TJ
T*[(56:)-600(   cout << stack.front\(\) << endl;)]TJ
T*[(57:)-600(})]TJ
(58:)'
T*[(59:)-600(void do_debug \(bigint_stack &stack\) {)]TJ
T*[(60:)-600(   \(void\) stack; // SUPPRESS: warning: unused parameter 'stack')]TJ
T*[(61:)-600(   cout << "Y not implemented" << endl;)]TJ
T*[(62:)-600(})]TJ
(63:)'
T*[(64:)-600(class ydc_quit: public exception {};)]TJ
ET
Q
Q
endstream
endobj
39 0 obj
3125
endobj
42 0 obj
<</Length 43 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 284.034 736.5 Tm
(main.cc)Tj
-117.247 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-104.787 -35.5 Td
[(65:)-600(void do_quit \(bigint_stack &stack\) {)]TJ
11 TL
T*[(66:)-600(   \(void\) stack; // SUPPRESS: warning: unused parameter 'stack')]TJ
T*[(67:)-600(   throw ydc_quit \(\);)]TJ
T*[(68:)-600(})]TJ
(69:)'
T*[(70:)-600(typedef void \(*function\) \(bigint_stack&\);)]TJ
T*[(71:)-600(typedef map <string, function> fnmap;)]TJ
T*[(72:)-600(fnmap load_fn \(\) {)]TJ
T*[(73:)-600(   fnmap functions;)]TJ
T*[(74:)-600(   functions["+"] = do_add;)]TJ
T*[(75:)-600(   functions["-"] = do_sub;)]TJ
T*[(76:)-600(   functions["*"] = do_mul;)]TJ
T*[(77:)-600(   functions["/"] = do_div;)]TJ
T*[(78:)-600(   functions["%"] = do_rem;)]TJ
T*[(79:)-600(   functions["^"] = do_pow;)]TJ
T*[(80:)-600(   functions["Y"] = do_debug;)]TJ
T*[(81:)-600(   functions["c"] = do_clear;)]TJ
T*[(82:)-600(   functions["d"] = do_dup;)]TJ
T*[(83:)-600(   functions["f"] = do_printall;)]TJ
T*[(84:)-600(   functions["p"] = do_print;)]TJ
T*[(85:)-600(   functions["q"] = do_quit;;)]TJ
T*[(86:)-600(   return functions;)]TJ
T*[(87:)-600(})]TJ
(88:)'
T*[(89:)-600(//)]TJ
T*[(90:)-600(// scan_options)]TJ
T*[(91:)-600(//    Options analysis:  The only option is -Dflags. )]TJ
T*[(92:)-600(//)]TJ
(93:)'
T*[(94:)-600(void scan_options \(int argc, char **argv\) {)]TJ
T*[(95:)-600(   opterr = 0;)]TJ
T*[(96:)-600(   for \(;;\) {)]TJ
T*[(97:)-600(      int option = getopt \(argc, argv, "@:"\);)]TJ
T*[(98:)-600(      if \(option == EOF\) break;)]TJ
T*[(99:)-600(      switch \(option\) {)]TJ
-6 -11 Td
[(100:)-600(         case '@':)]TJ
T*[(101:)-600(            traceflags::setflags \(optarg\);)]TJ
T*[(102:)-600(            break;)]TJ
T*[(103:)-600(         default:)]TJ
T*[(104:)-600(            complain\(\) << "-" << \(char\) optopt << ": invalid option")]TJ
T*[(105:)-600(                       << endl;)]TJ
T*[(106:)-600(            break;)]TJ
T*[(107:)-600(      })]TJ
T*[(108:)-600(   })]TJ
T*[(109:)-600(   if \(optind < argc\) {)]TJ
T*[(110:)-600(      complain\(\) << "operand not permitted" << endl;)]TJ
T*[(111:)-600(   })]TJ
T*[(112:)-600(})]TJ
(113:)'
T*[(114:)-600(int main \(int argc, char **argv\) {)]TJ
T*[(115:)-600(   sys_info::set_execname \(argv[0]\);)]TJ
T*[(116:)-600(   scan_options \(argc, argv\);)]TJ
T*[(117:)-600(   fnmap functions = load_fn\(\);)]TJ
T*[(118:)-600(   bigint_stack operand_stack;)]TJ
T*[(119:)-600(   scanner input;)]TJ
T*[(120:)-600(   try {)]TJ
T*[(121:)-600(      for \(;;\) {)]TJ
T*[(122:)-600(         try {)]TJ
T*[(123:)-600(            token_t token = input.scan\(\);)]TJ
T*[(124:)-600(            if \(token.symbol == SCANEOF\) break;)]TJ
T*[(125:)-600(            switch \(token.symbol\) {)]TJ
T*[(126:)-600(               case NUMBER:)]TJ
T*[(127:)-600(                  operand_stack.push_front \(token.lexinfo\);)]TJ
T*[(128:)-600(                  break;)]TJ
ET
Q
Q
endstream
endobj
43 0 obj
3301
endobj
46 0 obj
<</Length 47 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(3)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 284.034 736.5 Tm
(main.cc)Tj
-117.247 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-110.787 -35.5 Td
[(129:)-600(               case OPERATOR: {)]TJ
11 TL
T*[(130:)-600(                  function fn = functions[token.lexinfo];)]TJ
T*[(131:)-600(                  if \(fn == NULL\) {)]TJ
T*[(132:)-600(                     throw ydc_exn \(octal \(token.lexinfo[0]\))]TJ
T*[(133:)-600(                                    + " is unimplemented"\);)]TJ
T*[(134:)-600(                  })]TJ
T*[(135:)-600(                  fn \(operand_stack\);)]TJ
T*[(136:)-600(                  break;)]TJ
T*[(137:)-600(                  })]TJ
T*[(138:)-600(               default:)]TJ
T*[(139:)-600(                  break;)]TJ
T*[(140:)-600(            })]TJ
T*[(141:)-600(         }catch \(ydc_exn exn\) {)]TJ
T*[(142:)-600(            cout << exn.what\(\) << endl;)]TJ
T*[(143:)-600(         })]TJ
T*[(144:)-600(      })]TJ
T*[(145:)-600(   }catch \(ydc_quit\) {)]TJ
T*[(146:)-600(   })]TJ
T*[(147:)-600(   return sys_info::get_status \(\);)]TJ
T*[(148:)-600(})]TJ
(149:)'
ET
Q
Q
endstream
endobj
47 0 obj
1473
endobj
50 0 obj
<</Length 51 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:24)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 281.696 736.5 Tm
(bigint.cc)Tj
-114.909 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: bigint.cc,v 1.2 2011-01-18 22:18:35-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <cstdlib>)]TJ
T*[(4:)-600(#include <exception>)]TJ
T*[(5:)-600(#include <limits>)]TJ
T*[(6:)-600(#include <stack>)]TJ
T*[(7:)-600(#include <stdexcept>)]TJ
(8:)'
T*[(9:)-600(using namespace std;)]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(#include "bigint.h")]TJ
T*[(12:)-600(#include "trace.h")]TJ
(13:)'
T*[(14:)-600(bigint::bigint \(\): small_value \(0\) {)]TJ
T*[(15:)-600(})]TJ
(16:)'
T*[(17:)-600(bigint::bigint \(const bigint &that\): small_value \(that.small_value\) {)]TJ
T*[(18:)-600(   *this = that;)]TJ
T*[(19:)-600(})]TJ
(20:)'
T*[(21:)-600(bigint &bigint::operator= \(const bigint &that\) {)]TJ
T*[(22:)-600(   if \(this == &that\) return *this;)]TJ
T*[(23:)-600(   this->small_value = that.small_value;)]TJ
T*[(24:)-600(   return *this;)]TJ
T*[(25:)-600(})]TJ
(26:)'
T*[(27:)-600(bigint::~bigint\(\) {)]TJ
T*[(28:)-600(   TRACE \('~', cout << *this\);)]TJ
T*[(29:)-600(})]TJ
(30:)'
T*[(31:)-600(bigint::bigint \(int that\): small_value \(that\) {)]TJ
T*[(32:)-600(})]TJ
(33:)'
T*[(34:)-600(bigint::bigint \(const string &that\) {)]TJ
T*[(35:)-600(   TRACE \('b', that\);)]TJ
T*[(36:)-600(   string::const_iterator itor = that.begin\(\);)]TJ
T*[(37:)-600(   string::const_iterator end = that.end\(\);)]TJ
T*[(38:)-600(   bool isnegative = false;)]TJ
T*[(39:)-600(   if \(*itor == '_'\) {isnegative = true; ++itor; })]TJ
T*[(40:)-600(   int newval = 0;)]TJ
T*[(41:)-600(   for \(; itor != end; ++itor\) newval = newval * 10 + *itor - '0';)]TJ
T*[(42:)-600(   small_value = isnegative ? - newval : + newval;)]TJ
T*[(43:)-600(})]TJ
(44:)'
T*[(45:)-600(bigint bigint::operator+ \(const bigint &that\) const {)]TJ
T*[(46:)-600(   return this->small_value + that.small_value;)]TJ
T*[(47:)-600(})]TJ
(48:)'
T*[(49:)-600(bigint bigint::operator- \(const bigint &that\) const {)]TJ
T*[(50:)-600(   return this->small_value - that.small_value;)]TJ
T*[(51:)-600(})]TJ
(52:)'
T*[(53:)-600(bigint bigint::operator- \(\) const {)]TJ
T*[(54:)-600(   return -small_value;)]TJ
T*[(55:)-600(})]TJ
(56:)'
T*[(57:)-600(int bigint::compare \(const bigint &that\) const {)]TJ
T*[(58:)-600(   return this->small_value < that.small_value ? -1)]TJ
T*[(59:)-600(        : this->small_value > that.small_value ? +1 : 0;)]TJ
T*[(60:)-600(})]TJ
(61:)'
T*[(62:)-600(int bigint::abscompare \(const bigint &that\) const {)]TJ
T*[(63:)-600(   return abs \(this->small_value\) < abs \(that.small_value\) ? -1)]TJ
T*[(64:)-600(        : abs \(this->small_value\) > abs \(that.small_value\) ? +1 : 0;)]TJ
ET
Q
Q
endstream
endobj
51 0 obj
3091
endobj
54 0 obj
<</Length 55 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:24)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 281.696 736.5 Tm
(bigint.cc)Tj
-114.909 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-104.787 -35.5 Td
[(65:)-600(})]TJ
11 TL
(66:)'
T*[(67:)-600(int bigint::smallint \(\) const {)]TJ
T*[(68:)-600(   if \(*this < numeric_limits<int>::min\(\))]TJ
T*[(69:)-600(    || *this > numeric_limits<int>::max\(\)\))]TJ
T*[(70:)-600(               throw range_error \("smallint: out of range"\);)]TJ
T*[(71:)-600(   return small_value;)]TJ
T*[(72:)-600(})]TJ
(73:)'
T*[(74:)-600(bigint bigint::mul_by_2 \(\) {)]TJ
T*[(75:)-600(   return this->small_value *= 2;)]TJ
T*[(76:)-600(})]TJ
(77:)'
T*[(78:)-600(static bigpair popstack \(stack <bigpair> &egyptstack\) {)]TJ
T*[(79:)-600(   bigpair result = egyptstack.top \(\);)]TJ
T*[(80:)-600(   egyptstack.pop\(\);)]TJ
T*[(81:)-600(   return result;)]TJ
T*[(82:)-600(})]TJ
(83:)'
T*[(84:)-600(//)]TJ
T*[(85:)-600(// Ancient Egyptian multiplication algorithm.)]TJ
T*[(86:)-600(//)]TJ
T*[(87:)-600(bigint bigint::operator* \(const bigint &that\) const {)]TJ
T*[(88:)-600(   bigint top = that;)]TJ
T*[(89:)-600(   bigint count = 1;)]TJ
T*[(90:)-600(   TRACE \('*', *this << " * " << that\);)]TJ
T*[(91:)-600(   stack <bigpair> egyptstack;)]TJ
T*[(92:)-600(   popstack \(egyptstack\); // junk to suppress a warning)]TJ
T*[(93:)-600(   bigint result = 0;)]TJ
T*[(94:)-600(   if \(\(*this < 0\) != \(that < 0\)\) result = - result;)]TJ
T*[(95:)-600(   return result;)]TJ
T*[(96:)-600(})]TJ
(97:)'
T*[(98:)-600(//)]TJ
T*[(99:)-600(// Ancient Egyptian division algorithm.)]TJ
-6 -11 Td
[(100:)-600(//)]TJ
T*[(101:)-600(bigpair bigint::div_rem \(const bigint &that\) const {)]TJ
T*[(102:)-600(   if \(that == 0\) throw range_error \("divide by 0"\);)]TJ
T*[(103:)-600(   bigint count = 1;)]TJ
T*[(104:)-600(   bigint top = abs \(that.small_value\);)]TJ
T*[(105:)-600(   TRACE \('/', *this << " /% " << that\);)]TJ
T*[(106:)-600(   stack <bigpair> egyptstack;)]TJ
T*[(107:)-600(   bigint quotient = 0;)]TJ
T*[(108:)-600(   bigint remainder = abs \(this->small_value\);)]TJ
T*[(109:)-600(   return bigpair \(quotient, remainder\);)]TJ
T*[(110:)-600(})]TJ
(111:)'
T*[(112:)-600(bigint bigint::operator/ \(const bigint &that\) const {)]TJ
T*[(113:)-600(   return div_rem \(that\).first;)]TJ
T*[(114:)-600(})]TJ
(115:)'
T*[(116:)-600(bigint bigint::operator% \(const bigint &that\) const {)]TJ
T*[(117:)-600(   return div_rem \(that\).second;)]TJ
T*[(118:)-600(})]TJ
(119:)'
T*[(120:)-600(#define TRACE_POW \\)]TJ
T*[(121:)-600(   TRACE \('^', "result: " << result << ", base: " << base \\)]TJ
T*[(122:)-600(            << ", expt: " << expt\);)]TJ
T*[(123:)-600(bigint bigint::pow \(const bigint &that\) const {)]TJ
T*[(124:)-600(   bigint base = *this;)]TJ
T*[(125:)-600(   if \(that > 999\) throw range_error \("exp too big"\);)]TJ
T*[(126:)-600(   int expt = that.smallint\(\);)]TJ
T*[(127:)-600(   bigint result = 1;)]TJ
T*[(128:)-600(   TRACE_POW;)]TJ
ET
Q
Q
endstream
endobj
55 0 obj
3293
endobj
58 0 obj
<</Length 59 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:24)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(3)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 281.696 736.5 Tm
(bigint.cc)Tj
-114.909 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-110.787 -35.5 Td
[(129:)-600(   if \(expt < 0\) {)]TJ
11 TL
T*[(130:)-600(      base = 1 / base;)]TJ
T*[(131:)-600(      expt = - expt;)]TJ
T*[(132:)-600(   })]TJ
T*[(133:)-600(   while \(expt > 0\) {)]TJ
T*[(134:)-600(      TRACE_POW;)]TJ
T*[(135:)-600(      if \(expt & 1\) { //odd)]TJ
T*[(136:)-600(         result = result * base;)]TJ
T*[(137:)-600(         --expt;)]TJ
T*[(138:)-600(      }else { //even)]TJ
T*[(139:)-600(         base = base * base;)]TJ
T*[(140:)-600(         expt /= 2;)]TJ
T*[(141:)-600(      })]TJ
T*[(142:)-600(   })]TJ
T*[(143:)-600(   TRACE_POW;)]TJ
T*[(144:)-600(   return result;)]TJ
T*[(145:)-600(})]TJ
(146:)'
T*[(147:)-600(//)]TJ
T*[(148:)-600(// Macros can make repetitive code easier.)]TJ
T*[(149:)-600(//)]TJ
(150:)'
T*[(151:)-600(#define COMPARE\(OPER\) \\)]TJ
T*[(152:)-600(   bool bigint::operator OPER \(const bigint &that\) const { \\)]TJ
T*[(153:)-600(      return compare \(that\) OPER 0; \\)]TJ
T*[(154:)-600(   })]TJ
T*[(155:)-600(COMPARE \(==\))]TJ
T*[(156:)-600(COMPARE \(!=\))]TJ
T*[(157:)-600(COMPARE \(< \))]TJ
T*[(158:)-600(COMPARE \(<=\))]TJ
T*[(159:)-600(COMPARE \(> \))]TJ
T*[(160:)-600(COMPARE \(>=\))]TJ
(161:)'
T*[(162:)-600(#define INT_LEFT\(RESULT,OPER\) \\)]TJ
T*[(163:)-600(   RESULT operator OPER \(int left, const bigint &that\) { \\)]TJ
T*[(164:)-600(      return bigint \(left\) OPER that; \\)]TJ
T*[(165:)-600(   })]TJ
T*[(166:)-600(INT_LEFT \(bigint, +\))]TJ
T*[(167:)-600(INT_LEFT \(bigint, -\))]TJ
T*[(168:)-600(INT_LEFT \(bigint, *\))]TJ
T*[(169:)-600(INT_LEFT \(bigint, /\))]TJ
T*[(170:)-600(INT_LEFT \(bigint, %\))]TJ
T*[(171:)-600(INT_LEFT \(bool, ==\))]TJ
T*[(172:)-600(INT_LEFT \(bool, !=\))]TJ
T*[(173:)-600(INT_LEFT \(bool, < \))]TJ
T*[(174:)-600(INT_LEFT \(bool, <=\))]TJ
T*[(175:)-600(INT_LEFT \(bool, > \))]TJ
T*[(176:)-600(INT_LEFT \(bool, >=\))]TJ
(177:)'
T*[(178:)-600(ostream &operator<< \(ostream &out, const bigint &that\) {)]TJ
T*[(179:)-600(   out << that.small_value;)]TJ
T*[(180:)-600(   return out;)]TJ
T*[(181:)-600(})]TJ
(182:)'
ET
Q
Q
endstream
endobj
59 0 obj
2524
endobj
62 0 obj
<</Length 63 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:24)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 276.58 736.5 Tm
(scanner.cc)Tj
-109.793 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: scanner.cc,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <iostream>)]TJ
T*[(4:)-600(#include <locale>)]TJ
(5:)'
T*[(6:)-600(using namespace std;)]TJ
(7:)'
T*[(8:)-600(#include "scanner.h")]TJ
T*[(9:)-600(#include "trace.h")]TJ
-6 -11 Td
(10:)Tj
T*[(11:)-600(scanner::scanner \(\) {)]TJ
T*[(12:)-600(   seen_eof = false;)]TJ
T*[(13:)-600(   advance\(\);)]TJ
T*[(14:)-600(})]TJ
(15:)'
T*[(16:)-600(void scanner::advance \(\) {)]TJ
T*[(17:)-600(   if \(! seen_eof\) {)]TJ
T*[(18:)-600(      cin.get \(lookahead\);)]TJ
T*[(19:)-600(      if \(cin.eof\(\)\) seen_eof = true;)]TJ
T*[(20:)-600(   })]TJ
T*[(21:)-600(})]TJ
(22:)'
T*[(23:)-600(token_t scanner::scan\(\) {)]TJ
T*[(24:)-600(   token_t result;)]TJ
T*[(25:)-600(   while \(!seen_eof && isspace \(lookahead\)\) advance\(\);)]TJ
T*[(26:)-600(   if \(seen_eof\) {)]TJ
T*[(27:)-600(      result.symbol = SCANEOF;)]TJ
T*[(28:)-600(   }else if \(lookahead == '_' || isdigit \(lookahead\)\) {)]TJ
T*[(29:)-600(      result.symbol = NUMBER;)]TJ
T*[(30:)-600(      do {)]TJ
T*[(31:)-600(         result.lexinfo += lookahead;)]TJ
T*[(32:)-600(         advance\(\);)]TJ
T*[(33:)-600(      }while \(!seen_eof && isdigit \(lookahead\)\);)]TJ
T*[(34:)-600(   }else {)]TJ
T*[(35:)-600(      result.symbol = OPERATOR;)]TJ
T*[(36:)-600(      result.lexinfo += lookahead;)]TJ
T*[(37:)-600(      advance\(\);)]TJ
T*[(38:)-600(   })]TJ
T*[(39:)-600(   TRACE \('S', result\);)]TJ
T*[(40:)-600(   return result;)]TJ
T*[(41:)-600(})]TJ
(42:)'
T*[(43:)-600(ostream &operator<< \(ostream &out, const terminal_symbol &symbol\) {)]TJ
T*[(44:)-600(   switch \(symbol\) {)]TJ
T*[(45:)-600(      #define CASE_SYMBOL\(SYMBOL\) case SYMBOL: out << #SYMBOL; break;)]TJ
T*[(46:)-600(      CASE_SYMBOL \(NUMBER\);)]TJ
T*[(47:)-600(      CASE_SYMBOL \(OPERATOR\);)]TJ
T*[(48:)-600(      CASE_SYMBOL \(SCANEOF\);)]TJ
T*[(49:)-600(   })]TJ
T*[(50:)-600(   return out;)]TJ
T*[(51:)-600(})]TJ
(52:)'
T*[(53:)-600(ostream &operator<< \(ostream &out, const token_t &token\) {)]TJ
T*[(54:)-600(   out << token.symbol << ": \\"" << token.lexinfo << "\\"";)]TJ
T*[(55:)-600(   return out;)]TJ
T*[(56:)-600(})]TJ
(57:)'
ET
Q
Q
endstream
endobj
63 0 obj
2690
endobj
66 0 obj
<</Length 67 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:24)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 284.357 736.5 Tm
(trace.cc)Tj
-117.57 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: trace.cc,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <climits>)]TJ
T*[(4:)-600(#include <vector>)]TJ
(5:)'
T*[(6:)-600(using namespace std;)]TJ
(7:)'
T*[(8:)-600(#include "trace.h")]TJ
(9:)'
-6 -11 Td
[(10:)-600(//)]TJ
T*[(11:)-600(// ** BUG IN STL ** BUG IN STL **)]TJ
T*[(12:)-600(// We should use vector<bool> instead of vector<char>,)]TJ
T*[(13:)-600(// but vector<bool> has a bug:)]TJ
T*[(14:)-600(// http://forums.sun.com/thread.jspa?threadID=5277939)]TJ
T*[(15:)-600(// Static linking works, but doubles the size of the executable)]TJ
T*[(16:)-600(// image.)]TJ
T*[(17:)-600(// ** BUG IN STL ** BUG IN STL **)]TJ
T*[(18:)-600(//)]TJ
(19:)'
T*[(20:)-600(typedef vector<char> boolvec;)]TJ
T*[(21:)-600(boolvec traceflags::flags \(UCHAR_MAX + 1, false\);)]TJ
T*[(22:)-600(const boolvec trueflags \(UCHAR_MAX + 1, true\);)]TJ
(23:)'
T*[(24:)-600(void traceflags::setflags \(const string &optflags\) {)]TJ
T*[(25:)-600(   string::const_iterator itor = optflags.begin\(\);)]TJ
T*[(26:)-600(   string::const_iterator end = optflags.end\(\);)]TJ
T*[(27:)-600(   for \(; itor != end; ++itor\) {)]TJ
T*[(28:)-600(      if \(*itor == '@'\) {)]TJ
T*[(29:)-600(         flags = trueflags;)]TJ
T*[(30:)-600(      }else {)]TJ
T*[(31:)-600(         flags[*itor] = true;)]TJ
T*[(32:)-600(      })]TJ
T*[(33:)-600(   })]TJ
T*[(34:)-600(   // Note that TRACE can trace setflags.)]TJ
T*[(35:)-600(   TRACE \('t',  "optflags = " << optflags\);)]TJ
T*[(36:)-600(})]TJ
(37:)'
T*[(38:)-600(//)]TJ
T*[(39:)-600(// getflag -)]TJ
T*[(40:)-600(//    Check to see if a certain flag is on.)]TJ
T*[(41:)-600(//)]TJ
(42:)'
T*[(43:)-600(bool traceflags::getflag \(char flag\) {)]TJ
T*[(44:)-600(   // WARNING: Don't TRACE this function or the stack will blow up.)]TJ
T*[(45:)-600(   bool result = flags[flag];)]TJ
T*[(46:)-600(   return result;)]TJ
T*[(47:)-600(})]TJ
(48:)'
ET
Q
Q
endstream
endobj
67 0 obj
2411
endobj
70 0 obj
<</Length 71 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:25)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 288.696 736.5 Tm
(util.cc)Tj
-121.909 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(// $Id: util.cc,v 1.1 2011-01-18 22:17:09-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(#include <cstdlib>)]TJ
T*[(4:)-600(#include <sstream>)]TJ
(5:)'
T*[(6:)-600(using namespace std;)]TJ
(7:)'
T*[(8:)-600(#include "util.h")]TJ
(9:)'
-6 -11 Td
[(10:)-600(ydc_exn::ydc_exn \(const string &what\): runtime_error \(what\) {)]TJ
T*[(11:)-600(})]TJ
(12:)'
T*[(13:)-600(const string octal \(int decimal\) {)]TJ
T*[(14:)-600(   ostringstream ostring;)]TJ
T*[(15:)-600(   ostring.setf \(ios::oct\);)]TJ
T*[(16:)-600(   ostring << decimal;)]TJ
T*[(17:)-600(   return ostring.str \(\);)]TJ
T*[(18:)-600(})]TJ
(19:)'
T*[(20:)-600(int sys_info::exit_status = EXIT_SUCCESS;)]TJ
T*[(21:)-600(string sys_info::execname; // Must be initialized from main\(\).)]TJ
(22:)'
T*[(23:)-600(void sys_info::set_execname \(const string &argv0\) {)]TJ
T*[(24:)-600(   execname = argv0;)]TJ
T*[(25:)-600(   cout << boolalpha;)]TJ
T*[(26:)-600(   cerr << boolalpha;)]TJ
T*[(27:)-600(   TRACE \('Y', "execname = " << execname\);)]TJ
T*[(28:)-600(})]TJ
(29:)'
T*[(30:)-600(ostream &complain\(\) {)]TJ
T*[(31:)-600(   sys_info::set_status \(EXIT_FAILURE\);)]TJ
T*[(32:)-600(   cerr << sys_info::get_execname \(\) << ": ";)]TJ
T*[(33:)-600(   return cerr;)]TJ
T*[(34:)-600(})]TJ
(35:)'
T*[(36:)-600(template <typename item_t>)]TJ
T*[(37:)-600(ostream &operator<< \(ostream &out, const vector<item_t> &vec\) {)]TJ
T*[(38:)-600(   typename vector<item_t>::const_iterator itor = vec.begin\(\);)]TJ
T*[(39:)-600(   typename vector<item_t>::const_iterator end = vec.end\(\);)]TJ
(40:)'
T*[(41:)-600(   // If the vector is empty, do nothing.)]TJ
T*[(42:)-600(   if \(itor != end\) {)]TJ
T*[(43:)-600(      // Print out the first element without a space.)]TJ
T*[(44:)-600(      out << *itor++;)]TJ
T*[(45:)-600(      // Print out the rest of the elements each preceded by a space.)]TJ
T*[(46:)-600(      while \(itor != end\) out << " " << *itor++;)]TJ
T*[(47:)-600(   })]TJ
T*[(48:)-600(   return out;)]TJ
T*[(49:)-600(})]TJ
(50:)'
ET
Q
Q
endstream
endobj
71 0 obj
2511
endobj
74 0 obj
<</Length 75 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.773 736.5 Tm
(Makefile)Tj
-113.985 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(# $Id: Makefile,v 1.2 2011-01-18 22:19:23-08 - - $)]TJ
11 TL
(2:)'
T*[(3:)-600(MKFILE      = Makefile)]TJ
T*[(4:)-600(DEPSFILE    = ${MKFILE}.deps)]TJ
T*[(5:)-600(NOINCL      = ci clean spotless)]TJ
T*[(6:)-600(NEEDINCL    = ${filter ${NOINCL}, ${MAKECMDGOALS}})]TJ
T*[(7:)-600(GMAKE       = ${MAKE} --no-print-directory)]TJ
T*[(8:)-600(UNAME      ?= ${shell uname -s})]TJ
(9:)'
-6 -11 Td
[(10:)-600(ifeq \(${UNAME},SunOS\))]TJ
T*[(11:)-600(COMPILECCC  = CC -g -features=extensions)]TJ
T*[(12:)-600(MAKEDEPSCCC = CC -xM1)]TJ
T*[(13:)-600(endif)]TJ
T*[(14:)-600(ifeq \(${UNAME},Linux\))]TJ
T*[(15:)-600(COMPILECCC  = g++ -g -Wall -Wextra -Werror)]TJ
T*[(16:)-600(MAKEDEPSCCC = g++ -MM)]TJ
T*[(17:)-600(endif)]TJ
(18:)'
T*[(19:)-600(CCHEADER    =         bigint.h iterstack.h scanner.h  trace.h  util.h)]TJ
T*[(20:)-600(CCSOURCE    = main.cc bigint.cc            scanner.cc trace.cc util.cc)]TJ
T*[(21:)-600(EXECBIN     = ydc)]TJ
T*[(22:)-600(OBJECTS     = ${CCSOURCE:.cc=.o})]TJ
T*[(23:)-600(OTHERS      = ${MKFILE} ${DEPSFILE} README)]TJ
T*[(24:)-600(ALLSOURCES  = ${CCHEADER} ${CCSOURCE} ${OTHERS})]TJ
T*[(25:)-600(LISTING     = ../asg2-ydc.code.ps)]TJ
T*[(26:)-600(CLASS       = cmps109-wm.w11)]TJ
T*[(27:)-600(PROJECT     = asg2)]TJ
(28:)'
T*[(29:)-600(all : ${EXECBIN})]TJ
T*[(30:)-600(        - checksource ${ALLSOURCES})]TJ
(31:)'
T*[(32:)-600(${EXECBIN} : ${OBJECTS})]TJ
T*[(33:)-600(        ${COMPILECCC} -o $@ ${OBJECTS})]TJ
(34:)'
T*[(35:)-600(%.o : %.cc)]TJ
T*[(36:)-600(        cid + $<)]TJ
T*[(37:)-600(        ${COMPILECCC} -c $<)]TJ
(38:)'
T*[(39:)-600(ci : ${ALLSOURCES})]TJ
T*[(40:)-600(        - checksource ${ALLSOURCES})]TJ
T*[(41:)-600(        cid + ${ALLSOURCES})]TJ
(42:)'
T*[(43:)-600(lis : ${ALLSOURCES})]TJ
T*[(44:)-600(        mkpspdf ${LISTING} ${ALLSOURCES} ${DEPSFILE})]TJ
(45:)'
T*[(46:)-600(clean :)]TJ
T*[(47:)-600(        - rm ${OBJECTS} ${DEPSFILE} core ${EXECBIN}.errs)]TJ
(48:)'
T*[(49:)-600(spotless : clean)]TJ
T*[(50:)-600(        - rm ${EXECBIN} )]TJ
(51:)'
T*[(52:)-600(submit : ${ALLSOURCES})]TJ
T*[(53:)-600(        - checksource ${ALLSOURCES})]TJ
T*[(54:)-600(        submit ${CLASS} ${PROJECT} ${ALLSOURCES})]TJ
T*[(55:)-600(        testsubmit ${CLASS} ${PROJECT} ${ALLSOURCES})]TJ
(56:)'
T*[(57:)-600(deps : ${CCSOURCE} ${CCHEADER})]TJ
T*[(58:)-600(        @ echo "# ${DEPSFILE} created `LC_TIME=C date`" >${DEPSFILE})]TJ
T*[(59:)-600(        ${MAKEDEPSCCC} ${CCSOURCE} | sort | uniq >>${DEPSFILE})]TJ
(60:)'
T*[(61:)-600(${DEPSFILE} :)]TJ
T*[(62:)-600(        @ touch ${DEPSFILE})]TJ
T*[(63:)-600(        ${GMAKE} deps)]TJ
(64:)'
ET
Q
Q
endstream
endobj
75 0 obj
3105
endobj
78 0 obj
<</Length 79 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.773 736.5 Tm
(Makefile)Tj
-113.985 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-104.787 -35.5 Td
[(65:)-600(again :)]TJ
11 TL
T*[(66:)-600(        ${GMAKE} spotless deps ci all lis)]TJ
(67:)'
T*[(68:)-600(ifeq \(${NEEDINCL}, \))]TJ
T*[(69:)-600(include ${DEPSFILE})]TJ
T*[(70:)-600(endif)]TJ
(71:)'
ET
Q
Q
endstream
endobj
79 0 obj
719
endobj
82 0 obj
<</Length 83 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 266.192 736.5 Tm
(Makefile.deps)Tj
-99.4047 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(# Makefile.deps created Tue Jan 18 22:19:22 PST 2011)]TJ
11 TL
T*[(2:)-600(bigint.o: bigint.cc bigint.h trace.h)]TJ
T*[(3:)-600(main.o: main.cc bigint.h trace.h iterstack.h util.h scanner.h)]TJ
T*[(4:)-600(scanner.o: scanner.cc scanner.h trace.h)]TJ
T*[(5:)-600(trace.o: trace.cc trace.h)]TJ
T*[(6:)-600(util.o: util.cc util.h trace.h)]TJ
ET
Q
Q
endstream
endobj
83 0 obj
871
endobj
86 0 obj
<</Length 87 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 276.551 736.5 Tm
(README)Tj
-109.764 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600($Id: README,v 1.2 2011-01-18 22:18:39-08 - - $)]TJ
11 TL
(2:)'
ET
Q
Q
endstream
endobj
87 0 obj
588
endobj
90 0 obj
<</Length 91 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/18/11)Tj
-0.659766 -12.8004 Td
(22:19:23)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 266.192 736.5 Tm
(Makefile.deps)Tj
-99.4047 18 Td
($cmps109-wm/Assignments/asg2-dc-bigint/code/)Tj
/R10 10 Tf
-98.7875 -35.5 Td
[(1:)-600(# Makefile.deps created Tue Jan 18 22:19:22 PST 2011)]TJ
11 TL
T*[(2:)-600(bigint.o: bigint.cc bigint.h trace.h)]TJ
T*[(3:)-600(main.o: main.cc bigint.h trace.h iterstack.h util.h scanner.h)]TJ
T*[(4:)-600(scanner.o: scanner.cc scanner.h trace.h)]TJ
T*[(5:)-600(trace.o: trace.cc trace.h)]TJ
T*[(6:)-600(util.o: util.cc util.h trace.h)]TJ
ET
Q
Q
endstream
endobj
91 0 obj
871
endobj
4 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 12 0 R
>>
/Contents 5 0 R
>>
endobj
13 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 16 0 R
>>
/Contents 14 0 R
>>
endobj
17 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 20 0 R
>>
/Contents 18 0 R
>>
endobj
21 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 24 0 R
>>
/Contents 22 0 R
>>
endobj
25 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 28 0 R
>>
/Contents 26 0 R
>>
endobj
29 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 32 0 R
>>
/Contents 30 0 R
>>
endobj
33 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 36 0 R
>>
/Contents 34 0 R
>>
endobj
37 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 40 0 R
>>
/Contents 38 0 R
>>
endobj
41 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 44 0 R
>>
/Contents 42 0 R
>>
endobj
45 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 48 0 R
>>
/Contents 46 0 R
>>
endobj
49 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 52 0 R
>>
/Contents 50 0 R
>>
endobj
53 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 56 0 R
>>
/Contents 54 0 R
>>
endobj
57 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 60 0 R
>>
/Contents 58 0 R
>>
endobj
61 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 64 0 R
>>
/Contents 62 0 R
>>
endobj
65 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 68 0 R
>>
/Contents 66 0 R
>>
endobj
69 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 72 0 R
>>
/Contents 70 0 R
>>
endobj
73 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 76 0 R
>>
/Contents 74 0 R
>>
endobj
77 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 80 0 R
>>
/Contents 78 0 R
>>
endobj
81 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 84 0 R
>>
/Contents 82 0 R
>>
endobj
85 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 88 0 R
>>
/Contents 86 0 R
>>
endobj
89 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 92 0 R
>>
/Contents 90 0 R
>>
endobj
3 0 obj
<< /Type /Pages /Kids [
4 0 R
13 0 R
17 0 R
21 0 R
25 0 R
29 0 R
33 0 R
37 0 R
41 0 R
45 0 R
49 0 R
53 0 R
57 0 R
61 0 R
65 0 R
69 0 R
73 0 R
77 0 R
81 0 R
85 0 R
89 0 R
] /Count 21
>>
endobj
1 0 obj
<</Type /Catalog /Pages 3 0 R
>>
endobj
12 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R/R11
11 0 R>>
endobj
16 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
20 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
24 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
28 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
32 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
36 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
40 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
44 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
48 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
52 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
56 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
60 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
64 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
68 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
72 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
76 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
80 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
84 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
88 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
92 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
8 0 obj
<</BaseFont/Times-Roman/Type/Font
/Subtype/Type1>>
endobj
10 0 obj
<</BaseFont/Courier/Type/Font
/Encoding 93 0 R/Subtype/Type1>>
endobj
93 0 obj
<</Type/Encoding/Differences[
126/tilde]>>
endobj
7 0 obj
<</BaseFont/Helvetica-Bold/Type/Font
/Subtype/Type1>>
endobj
9 0 obj
<</BaseFont/Times-Bold/Type/Font
/Subtype/Type1>>
endobj
11 0 obj
<</BaseFont/Courier-Bold/Type/Font
/Subtype/Type1>>
endobj
2 0 obj
<</Producer(ESP Ghostscript 815.02)
/CreationDate(D:20110118221925)
/ModDate(D:20110118221925)>>endobj
xref
0 94
0000000000 65535 f 
0000050814 00000 n 
0000052518 00000 n 
0000050614 00000 n 
0000047781 00000 n 
0000000009 00000 n 
0000003363 00000 n 
0000052316 00000 n 
0000052112 00000 n 
0000052385 00000 n 
0000052178 00000 n 
0000052450 00000 n 
0000050862 00000 n 
0000047914 00000 n 
0000003383 00000 n 
0000004756 00000 n 
0000050932 00000 n 
0000048049 00000 n 
0000004777 00000 n 
0000007528 00000 n 
0000050991 00000 n 
0000048184 00000 n 
0000007549 00000 n 
0000009160 00000 n 
0000051050 00000 n 
0000048319 00000 n 
0000009181 00000 n 
0000011923 00000 n 
0000051109 00000 n 
0000048454 00000 n 
0000011944 00000 n 
0000014876 00000 n 
0000051168 00000 n 
0000048589 00000 n 
0000014897 00000 n 
0000016169 00000 n 
0000051227 00000 n 
0000048724 00000 n 
0000016190 00000 n 
0000019367 00000 n 
0000051286 00000 n 
0000048859 00000 n 
0000019388 00000 n 
0000022741 00000 n 
0000051345 00000 n 
0000048994 00000 n 
0000022762 00000 n 
0000024287 00000 n 
0000051404 00000 n 
0000049129 00000 n 
0000024308 00000 n 
0000027451 00000 n 
0000051463 00000 n 
0000049264 00000 n 
0000027472 00000 n 
0000030817 00000 n 
0000051522 00000 n 
0000049399 00000 n 
0000030838 00000 n 
0000033414 00000 n 
0000051581 00000 n 
0000049534 00000 n 
0000033435 00000 n 
0000036177 00000 n 
0000051640 00000 n 
0000049669 00000 n 
0000036198 00000 n 
0000038661 00000 n 
0000051699 00000 n 
0000049804 00000 n 
0000038682 00000 n 
0000041245 00000 n 
0000051758 00000 n 
0000049939 00000 n 
0000041266 00000 n 
0000044423 00000 n 
0000051817 00000 n 
0000050074 00000 n 
0000044444 00000 n 
0000045215 00000 n 
0000051876 00000 n 
0000050209 00000 n 
0000045235 00000 n 
0000046158 00000 n 
0000051935 00000 n 
0000050344 00000 n 
0000046178 00000 n 
0000046818 00000 n 
0000051994 00000 n 
0000050479 00000 n 
0000046838 00000 n 
0000047761 00000 n 
0000052053 00000 n 
0000052257 00000 n 
trailer
<< /Size 94 /Root 1 0 R /Info 2 0 R
/ID [<41D60DA4F0F28EEF940F611BBEA8E56E><41D60DA4F0F28EEF940F611BBEA8E56E>]
>>
startxref
52629
%%EOF
